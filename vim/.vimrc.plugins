" set the runtime path to include Vundle and initialize 
filetype off

call plug#begin('~/.vim/plugged')
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
" use PluginInstall to install these plugins
" and PluginClean to clean.
" requires Vundle to be installed,
" install Vundle with
" git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim

Plug 'gmarik/Vundle.vim' " Required

" The colorschemes
Plug 'tomasr/molokai'
Plug 'flazz/vim-colorschemes'

Plug 'scrooloose/nerdtree', {'on':'NERDTreeFind'} " file browser
"Plug 'scrooloose/nerdcommenter' " Commenter
Plug 'tpope/vim-commentary'

Plug 'bling/vim-airline' "status bar
Plug 'scrooloose/syntastic' " Dat syntax highlighter
Plug 'tpope/vim-fugitive' " git integration

" easy motion, to train motions better.
" mapped to leader leader.
Plug 'Lokaltog/vim-easymotion'



" use cs to change surrounding, ds to delete surrounding and ys to insert surrounding
Plug 'tpope/vim-surround' 
" repeat last command, . on steroids
Plug 'tpope/vim-repeat'

" enable readline bindings in vim (i.e. c-a to go to start of line in insert
" and command line mode, c-e end of line, c-f and c-b a letter forward and
" backward and m-f and m-b for a word worard and backward
Plug 'Tritlo/vim-rsi' " uses tritlo instead of tpope, due to M-n being same as รฐ key on icelandic keyboard

" supercharges the * command (search for word under cursor)
Plug 'ironhouzi/vim-stim'


"" misc
Plug 'tinymode.vim' " continuous key presses
Plug 'rking/ag.vim' " better grep, search for term in project.


" filetype plugins
Plug 'jnwhiteh/vim-golang'
Plug 'pangloss/vim-javascript'
Plug 'ekalinin/Dockerfile.vim'
Plug 'nginx.vim', {'for': 'nginx'}
Plug 'elzr/vim-json'
" Plug 'godlygeek/tabular' " for markdown
Plug 'tpope/vim-markdown', {'for': 'markdown'}
Plug 'nelstrom/vim-markdown-folding', {'for': 'markdown'}
" opencl.
" remember to create
" opencl.vim in ~/.vim/ftdetect/
" containing the command
" autocmd BufRead,BufNewFile *.cl set filetype=opencl
Plug 'petRUShka/vim-opencl', {'for':'opencl'}

Plug 'kchmck/vim-coffee-script', {'for':'coffee'}

" a good mode
" Plug 'jceb/vim-orgmode'
" Plug 'tpope/vim-speeddating'
Plug 'hsitz/VimOrganizer'
Plug 'mattn/calendar-vim'


" supervisor files and supervisor ctl
Plug 'thiderman/vim-supervisor' " also some functionality
Plug 'vim-scripts/Tail-Bundle' " works for other tail files as well

Plug 'sjl/gundo.vim'     " bound to <Leader>gu, displays the undo tree (so that i use it)
Plug 'edsono/vim-matchit' " better % matching, including html tags

Plug 'SirVer/ultisnips' " inserts snippets
Plug 'honza/vim-snippets' " lots of predefined snippets

Plug 'nathanaelkane/vim-indent-guides' " toggleable with <Leader>ig


" vimshell and deps.
Plug 'Shougo/vimproc.vim'
Plug 'Shougo/vimshell.vim'
Plug 'Shougo/neocomplcache.vim'


" clojure
Plug 'tpope/vim-dispatch', {'for':'clojure'}
Plug 'tpope/vim-fireplace', {'for':'clojure'}
Plug 'tpope/vim-leiningen', {'for':'clojure'}

" Latex

Plug 'git://git.code.sf.net/p/vim-latex/vim-latex', {'for':'latex'}

Plug 'vim-voom/VOoM' " outline viewer
Plug 'vim-scripts/utl.vim' " better vim url handling
" emacs kill-ring in vim.
" use with meta-p to scroll through yank history.
" Does not work with the Icelandic key รฐ.
Plug 'maxbrunsfeld/vim-yankstack'

if has("unix")
    " unix only plugins go here
    Plug 'Valloric/YouCompleteMe'
    " Tharf exuberant ctags
    Plug 'jeetsukumaran/vim-gazetteer'
    Plug 'majutsushi/tagbar'
endif

" Thessi haegja a, viljum thad ekki i terminal
if has('gui_running')
    " these take longer to load

    "vim notes
    Plug 'xolox/vim-shell'
    Plug 'xolox/vim-misc'
    Plug 'xolox/vim-notes'
    "
    " local vimrc, loads .lvimrc files in reverse order, and applies those 
    " settings. Like exrc, but hierarchical.
    Plug 'embear/vim-localvimrc'

    Plug 'klen/python-mode'
    " File finder
    Plug 'kien/ctrlp.vim'
    Plug 'tpope/vim-sleuth' " automatically detects indent settings

    "git gutter
    Plug 'airblade/vim-gitgutter'
    " Ser medhondlun

    if has("unix")
        " Code completion, tharf ad compile-a med cmake og libclang og e-d

    endif
endif
call plug#end()
" call vundle#end()            " required
filetype plugin indent on    " required


"continuous resize
call tinymode#EnterMap("winsize","<C-W>+","+")
call tinymode#EnterMap("winsize","<C-W>-","-")
call tinymode#EnterMap("winsize","<Leader>w+","+")
call tinymode#EnterMap("winsize","<Leader>w-","-")
call tinymode#Map("winsize","+","wincmd +")
call tinymode#Map("winsize","-","wincmd -")
call tinymode#EnterMap("winsize","<C-W><","<")
call tinymode#EnterMap("winsize","<C-W>>",">")
call tinymode#EnterMap("winsize","<Leader>w<","<")
call tinymode#EnterMap("winsize","<Leader>w>",">")
call tinymode#Map("winsize","<","wincmd <")
call tinymode#Map("winsize",">","wincmd >")
call tinymode#ModeMsg("winsize","Change window size +/-, </>")

call tinymode#EnterMap("yankstack","<Leader>pj","j")
call tinymode#EnterMap("yankstack","<Leader>pk","k")
call tinymode#Map("yankstack","j","normal \<Plug>yankstack_substitute_newer_paste")
call tinymode#Map("yankstack","k","normal \<Plug>yankstack_substitute_older_paste")
call tinymode#ModeMsg("yankstack","Scroll through yankstack with j/k")


autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif


command! OrgCapture :call org#CaptureBuffer()
command! OrgCaptureFile :call org#OpenCaptureFile()


let g:syntastic_c_check_header = 1
let g:syntastic_always_populate_loc_list = 1
let g:airline#extensions#tabline#enabled = 1
let g:ycm_confirm_extra_conf = 0
" let g:ycm_complete_in_comments = 1

let g:indent_guides_guide_size=1
let g:indent_guides_start_level=2
let g:indent_guides_enable_on_vim_startup=1

colorscheme molokai
